externalDeclaration
    : functionDefinition
    | declaration
    ;

functionDefinition // Fatorar usando savePosition e restaurePosition
    savePosition()
    : declarationSpecifiers declarator declarationList compoundStatement
    | declarationSpecifiers declarator compoundStatement
    restaurePosition()
    savePosition()
    | declarator declarationList compoundStatement
    | declarator compoundStatement
    restaurePosition()
    ;

primaryExpression 
    : Identifier
    | Constant
    | ParenthesisOpen expression ParenthesisClose
    ;

postFixExpression  
    : primaryExpression postFixEspressionR
    ;

postFixEspressionR
    : BracketOpen expression BracketClose postFixEspressionR
    | ParenthesisOpen ParenthesisClose postFixEspressionR
    | ParenthesisOpen argumentExpressionList ParenthesisClose postFixEspressionR
    | Dot Identifier postFixEspressionR
    | Accessor Identifier postFixEspressionR
    | IncOp postFixEspressionR
    | DecOp postFixEspressionR
    | Vazio
    ;

argumentExpressionList 
    : assignmentExpression argumentExpressionListR 
    ;

argumentExpressionListR 
    : Comma assignmentExpression argumentExpressionListR  
    | Vazio
    ;

unaryExpression
    : postFixExpression
    | IncOp unaryExpression
    | DecOp unaryExpression
    | unaryOperator castExpression
    ;

unaryOperator
    : AndOp
    | Product
    | Plus
    | Minus
    | Negate
    | LogicalNot
    ;

castExpression
    : unaryExpression
    | ParenthesisOpen typeName ParenthesisClose castExpression
    ;

multiplicativeExpression 
    : castExpression multiplicativeExpressionR
    ;

multiplicativeExpressionR
    : Product unaryExpression multiplicativeExpressionR
    | Division unaryExpression multiplicativeExpressionR
    | Module unaryExpression multiplicativeExpressionR
    | Vazio
    ;

additiveExpression 
    : multiplicativeExpression additiveExpressionR
    ;

additiveExpressionR
    : Plus multiplicativeExpression additiveExpressionR
    | Minus multiplicativeExpression additiveExpressionR
    | Vazio     
    ;
 
shiftExpression
    : additiveExpression shiftExpressionR
    ;

shiftExpressionR
    : LeftOp additiveExpression shiftExpressionR
    | RightOp additiveExpression shiftExpressionR
    | Vazio
    ;

relationalExpression
    : shiftExpression relationalExpressionR
    ;

relationalExpressionR
    : Less shiftExpression relationalExpressionR
    | Greater shiftExpression relationalExpressionR
    | LEOp shiftExpression relationalExpressionR
    | GEOP shiftExpression relationalExpressionR
    | Vazio
    ;

equalityExpression
    : relationalExpression equalityExpressionR
    ;

equalityExpressionR
    : EQOp relationalExpression equalityExpressionR
    | NEOp relationalExpression equalityExpressionR
    | Vazio
    ;

andExpression
    : equalityExpression andExpressionR
    ;

andExpressionR
    : AndOp equalityExpression andExpressionR
    | Vazio
    ;

exclusiveOrExpression
    : andExpression exclusiveOrExpressionR
    ;

exclusiveOrExpressionR
    : Power andExpression exclusiveOrExpressionR
    | Vazio
    ;

inclusiveOrExpression 
    : exclusiveOrExpression inclusiveOrExpressionR
    ;

inclusiveOrExpressionR
    : OrOp exclusiveOrExpression inclusiveOrExpressionR
    | Vazio
    ;

logicalAndExpression 
    : inclusiveOrExpression logicalAndExpressionR
    ;

logicalAndExpressionR
    : AndOp inclusiveOrExpression logicalAndExpressionR
    | Vazio
    ;

logicalOrExpression
    : logicalAndExpression logicalOrExpressionR
    ;

logicalOrExpressionR
    : OrOp logicalAndExpression logicalOrExpressionR
    | Vazio
    ;

conditionExpression
    : logicalOrExpression
    | logicalOrExpression QuestionMark expression Colon conditionExpression
    ;

assignmentExpression
    : conditionExpression
    | unaryExpression assignmentOperator assignmentExpression
    ;

assignmentOperator
    : Assign
    | MulAssign
    | DivAssign
    | ModAssign
    | AddAssign
    | LessAssign
    | LeftAssign
    | RightAssign
    ;


expression
    : assignmentExpression expressionR
    ;

expressionR
    : Comma assignmentExpression expressionR
    | Vazio
    ;

constantExrpression
    : logicalOrExpression
    ;

declaration 
    : declarationSpecifiers SemiCollon
    | declarationSpecifiers initDeclaratorList SemiCollon
    ;

declarationSpecifiers
    : typeSpecifier
    | typeSpecifier declarationSpecifiers
    ;

initDeclaratorList 
    : initDeclarator initDeclaratorListR
    ;

initDeclaratorListR
    : Comma initDeclarator initDeclaratorListR 
    | Vazio

    ;

initDeclarator
    : declarator
    | declarator Assign initializer
    ;

typeSpecifier
    : Void
    | Char
    | Short
    | Int
    | Long
    | Float
    | Double
    | Signed
    | Unsigned
    | structSprecifier
    ;

structSprecifier
    : Struct Identifier BraceOpen structDeclarationList BraceClose
    | Struct Identifier
    | Struct BraceOpen structDeclarationList BraceClose
    ;

structDeclarationList 
    : structDeclaration structDeclarationListR
    ;

structDeclarationListR
    : structDeclaration structDeclaratorListR
    | Vazio


structDeclaration
    : specifierList structDeclaratorList SemiCollon
    ;

specifierList
    : typeSpecifier specifierList
    | typeSpecifier
    ;

structDeclaratorList
    : structDeclarator structDeclaratorListR 
    ;

structDeclaratorListR
    : Comma structDeclarator structDeclaratorListR
    | Vazio

    ;

structDeclarator
    : declarator
    | declarator Collon logicalOrExpression
    | Collon logicalOrExpression
    ;

declarator
    : pointer directDeclarator
    | directDeclarator
    ;



directDeclarator
	: Identifier directDeclaratorR
	| ParentesisOpen declarator ParentesisClose directDeclaratorR
	;

directDeclaratorR 
	: BracketOpen logicalOrExpression BracketClose directDeclaratorR
	| BracketOpen BracketClose directDeclaratorR
    | ParenthesisOpen parameterTypeList ParenthesisClose directDeclaratorR
    | ParenthesisOpen ParenthesisClose directDeclaratorR
    | Vazio
    ;

pointer 
    : Product
    | Product pointer
    ;

parameterTypeList
    : parameterList
    | parameterList Comma Ellipsis
    ;

parameterList
:  parameterDeclaration parameterListR
;

parameterListR
: Comma parameterDeclaration parameterListR
    | Vazio
;  

parameterDeclaration
    : declarationSpecifiers declarator
    | declarationSpecifiers abstractDeclarator
    | declarationSpecifiers
    ;

identifierList 
    : Identifier identifierListR
    ;

identifierListR
	: Comma Identifier identifierListR 
    | Vazio
	;

typeName
    : specifierList
    | specifierList abstractDeclarator
    ;

abstractDeclarator
    : pointer
    | directAbstractDeclarator
    | pointer directAbstractDeclarator
    ;

directAbstractDeclarator 
    : ParenthesisOpen abstractDeclarator ParenthesisClose directAbstractDeclaratorR
    | BracketClose BracketClose directAbstractDeclaratorR
    | BracketOpen constantExrpression BracketOpen directAbstractDeclaratorR
    | ParenthesisOpen ParenthesisClose directAbstractDeclaratorR
    | ParenthesisOpen parameterTypeList ParenthesisClose directAbstractDeclaratorR
    ;

directAbstractDeclaratorR
	: BracketOpen BracketClose directAbstractDeclaratorR
    | BracketOpen logicalOrExpression BracketClose directAbstractDeclaratorR
    | ParenthesisOpen ParenthesisClose directAbstractDeclaratorR
    | ParenthesisOpen parameterTypeList ParenthesisClose directAbstractDeclaratorR
    | Vazio
    ;

initializer
    : assignmentExpression
    | BraceOpen initializerList BraceClose
    | BraceOpen initializerList Comma BraceClose
    ;

initializerList 
    : initializer initializerListR
    ;

initializerListR
	: Comma initializer initializerListR
    | Vazio
    ;
	
statement
    : labeledStatement
    | compoundStatement
    | expressionStatement
    | selectionsStatement
    | iterationStatement
    | jumpStatement
    ;




labeledStatement
    : Identifier Collon statement
    | Case logicalOrExpression Collon statement
    | Default Collon statement
    ;

compoundStatement
    : BraceOpen BraceClose
    | BraceOpen statementList BraceClose
    | BraceOpen declarationList BraceClose
    | BraceOpen statementList BraceClose

declarationList 
    : declaration
    | declarationList declaration
    ;

statementList 
    : statement statementListR
    ;

statementListR
	: statement statementListR
    : vazio
	;

expressionStatement
    : SemiCollon
    | expression SemiCollon
    ;

selectionsStatement
    : If ParenthesisOpen expression ParenthesisClose statement
    | If ParenthesisOpen expression ParenthesisClose statement Else statement
    | Switch ParenthesisOpen expression ParenthesisClose statement
    ;

iterationStatement
    : While ParenthesisOpen expression ParenthesisClose statement
    | Do statement While ParenthesisOpen expression ParenthesisClose SemiCollon
    | For ParenthesisOpen expressionStatement expressionStatement ParenthesisClose statement
    | For ParenthesisOpen expressionStatement expressionStatement expression ParenthesisClose statement
    ;

jumpStatement
    : Continue SemiCollon
    | Break SemiCollon
    | Return SemiCollon
    | Return expression semiCollon
    ;
